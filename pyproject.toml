[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "robotics_utils"
version = "0.0.1"
description = "General-purpose robotics utilities"
requires-python = ">=3.8"

# Core dependencies - Always installed
dependencies = ["click", "rich", "numpy", "trimesh"]

# Optional dependencies support optional user features
# Reference: https://pydevtools.com/handbook/explanation/what-are-optional-dependencies-and-dependency-groups/
[project.optional-dependencies]

# Optional dependencies to support computer vision applications
vision = [
    "torch",
    "torchvision",
    "transformers",
    "pillow",
    "opencv-python",
    "pupil-apriltags",
]

# Optional dependencies to support Intel RealSense sensors
realsense = ["robotics-utils[vision]", "pyrealsense2", "open3d"]

# Optional dependencies to use Gemini Robotics-ER 1.5
gemini = [
    "robotics-utils[vision]",
    "google-genai; python_version >= '3.9'",
    "httpx",
]

all = ["robotics-utils[vision]"] # Install everything


# Dependency groups manage development-time dependencies
# Reference: https://pydevtools.com/handbook/explanation/what-are-optional-dependencies-and-dependency-groups/
[dependency-groups]
dev = ["ruff", "pytest", "hypothesis", "pytest-cov", "pylint"]


[tool.hatch.build.targets.wheel]
packages = ["src/robotics_utils"] # Include packages at these paths


[tool.ruff]
line-length = 100
indent-width = 4

[tool.ruff.lint]
select = ["ALL"] # Default to all Ruff rules, add ignores as needed
ignore = [
    "D203",   # No blank line between class definition and its docstring
    "D213",   # Place docstring summary immediately after the opening quotes
    "TRY003", # Permit defining exception messages at point of raising
    "EM101",  # Allow using string literals directly within exception constructors
    "EM102",  # Allow using f-strings directly within exception constructors
]
unfixable = ["F401"] # Disable 'fix' for unused imports

# Allow omission of return type on __init__
flake8-annotations = { mypy-init-return = true }

[tool.ruff.lint.per-file-ignores]
"**/tests/*" = ["S101"]   # Allow assertions in test files
"**/scripts/*" = ["T201"] # Allow print statements in scripts

[tool.ruff.format]
quote-style = "double"
indent-style = "space"


[tool.pytest.ini_options]
minversion = "6.0"    # Needed to use pyproject.toml
testpaths = ["tests"] # Directories searched for tests
pythonpath = ["src"]  # Added to Python search path
